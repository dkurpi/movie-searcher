{"version":3,"sources":["context/ThemeLayout.tsx","utils/fetchServices.ts","components/Card/Card.styles.tsx","components/Card/index.tsx","components/Search/Search.styles.tsx","pages/Home.tsx","components/Search/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","primary","white","ThemeLayout","children","GlobalStyle","createGlobalStyle","getTitles","searchPhrase","a","type","VideoType","ALL","page","alert","axios","data","Response","Error","body","CardOuter","styled","section","CardInner","div","Image","img","Title","p","Year","Type","Card","src","alt","restProps","Input","input","Form","form","StyledButton","button","css","SelectInput","select","OptionInput","option","Search","onSubmit","e","preventDefault","action","Text","Select","value","onChange","id","name","Option","Button","onClick","data-testid","autoComplete","videoTypes","Object","entries","Home","classes","useStyles","useState","isLoading","setIsLoading","inputValue","setInputValue","setType","setPage","title","setTitle","totalResults","setTotalResults","titleList","setTitleList","useEffect","then","res","console","log","Number","catch","err","size","target","map","length","style","textAlign","display","flexWrap","maxWidth","margin","justifyContent","video","Poster","imdbID","Pagination","ul","count","Math","ceil","event","window","scrollTo","color","makeStyles","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a2b5717.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\n\r\nexport const theme = {\r\n  primary: \"#E50914\",\r\n  white: \"#FFF\",\r\n};\r\n\r\nexport const ThemeLayout: React.FC = ({ children }) => (\r\n  <ThemeProvider theme={theme}>\r\n    <>\r\n      <GlobalStyle />\r\n      {children}\r\n    </>\r\n  </ThemeProvider>\r\n);\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nbody {\r\n  margin: 0;\r\n  font-family: Montserrat, -apple-system, BlinkMacSystemFont, \"Segoe UI\",\r\n    \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\r\n    \"Helvetica Neue\", sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  font-weight: 300;\r\n  width: 100vw;\r\n  overflow-x: hidden;\r\n}\r\n\r\ncode {\r\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\r\n    monospace;\r\n}\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\na {\r\n  font-size: 20px;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n}\r\n\r\na:hover {\r\n  color: rgb(0, 174, 255);\r\n}\r\n`;\r\n","import axios, { AxiosResponse } from \"axios\";\r\n\r\ninterface APIResponseMovieList {\r\n  Response: string;\r\n  Search: SingleTitle[];\r\n  totalResults: string;\r\n  Error?: string;\r\n}\r\n\r\nexport const getTitles = async (\r\n  searchPhrase: string,\r\n  type: VideoType = VideoType.ALL,\r\n  page: number = 1\r\n): Promise<APIResponseMovieList> => {\r\n  try {\r\n    if (!searchPhrase) throw alert(\"Type title!\");\r\n    const { data }: AxiosResponse<APIResponseMovieList> = await axios(\r\n      `https://omdbapi.com/?apikey=aeae8ab&s=${searchPhrase}&type=${type}&page=${page}`\r\n    );\r\n\r\n    if (data.Response === \"False\") throw data.Error;\r\n\r\n    const body = data;\r\n    return body;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\n\r\nexport const CardOuter = styled.section`\r\n  max-width: 20%;\r\n  flex-grow: 1;\r\n  padding: 20px;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  transition: 0.4s;\r\n`;\r\n\r\nexport const CardInner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  object-fit: cover;\r\n  margin-bottom: 20px;\r\n  height: 400px;\r\n  transition: 0.4s;\r\n  :hover {\r\n    filter: grayscale(100%);\r\n  }\r\n  position: relative;\r\n  ::after {\r\n    content: \"See more\";\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 20px;\r\n    height: 20px;\r\n    background-color: red;\r\n  }\r\n`;\r\nexport const Title = styled.p`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  text-overflow: ellipsis;\r\n`;\r\nexport const Year = styled.p`\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n`;\r\nexport const Type = styled.div`\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: black;\r\n  padding: 5px 0;\r\n`;\r\n","import React from \"react\";\r\nimport { CardInner, CardOuter, Title, Year, Type, Image } from \"./Card.styles\";\r\ntype CardElements = {\r\n  Image: React.FC<ImageProps>;\r\n  Title: React.FC;\r\n  Year: React.FC;\r\n  Type: React.FC;\r\n};\r\n\r\ntype ImageProps = {\r\n  src: string;\r\n};\r\n\r\nexport const Card: React.FC & CardElements = ({ children }) => (\r\n  <CardOuter>\r\n    <CardInner>{children}</CardInner>\r\n  </CardOuter>\r\n);\r\n\r\nCard.Image = ({ src }) => {\r\n  return (\r\n    <Image\r\n      src={\r\n        src === \"N/A\"\r\n          ? \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT7sm5Mc_-7mF6ja6vXo-H_H9JmybWFqPNfAA&usqp=CAU\"\r\n          : src\r\n      }\r\n      alt=\"\"\r\n    />\r\n  );\r\n};\r\n\r\nCard.Title = ({ children, ...restProps }) => (\r\n  <Title {...restProps}>{children}</Title>\r\n);\r\n\r\nCard.Year = ({ children, ...restProps }) => (\r\n  <Year {...restProps}>{children}</Year>\r\n);\r\n\r\nCard.Type = ({ children, ...restProps }) => (\r\n  <Type {...restProps}>{children}</Type>\r\n);\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const Text = styled.p`\r\n  font-weight: 300;\r\n  font-size: 1.2em;\r\n\r\n \"font-size: 2em; font-weight: 300\"\r\n\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  cursor: pointer;\r\n  font-size: 1.4em;\r\n  margin: 40px 0 0;\r\n  padding: 12px 18px;\r\n  color: ${({ theme }) => theme.white};\r\n  text-decoration: none;\r\n  border: none;\r\n  font-family: montserrat;\r\n  border-bottom: 3px solid #999;\r\n  transition: 0.2s;\r\n  background-color: transparent;\r\n  width: 35%;\r\n  text-align: center;\r\n  :active {\r\n    background-color: transparent;\r\n  }\r\n  :focus {\r\n    outline: none;\r\n    border-bottom: 3px solid ${({ theme }) => theme.primary};\r\n    background-color: transparent;\r\n    width: 40%;\r\n  }\r\n  :hover {\r\n    outline: none;\r\n    border-bottom: 3px solid ${({ theme }) => theme.primary};\r\n    background-color: transparent;\r\n  }\r\n  ::selection {\r\n    background-color: ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  margin: 5vh auto;\r\n`;\r\n\r\ntype IButtonProps = {\r\n  primary?: boolean;\r\n};\r\n\r\nexport const StyledButton = styled.button<IButtonProps>`\r\n  background: transparent;\r\n  border-radius: 5px;\r\n  padding: 0.75em 2em;\r\n  margin: 0 15px;\r\n  font-size: 20px;\r\n  border-radius: 15px;\r\n  border: none;\r\n  color: black;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  transition: 0.2s;\r\n  border: 3px solid transparent;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${({ theme, primary = true }) =>\r\n    primary &&\r\n    css`\r\n      background-color: ${theme.primary};\r\n      color: ${theme.white};\r\n\r\n      :hover {\r\n        background-color: transparent;\r\n        color: ${theme.primary};\r\n        border-color: ${theme.primary};\r\n      }\r\n    `}\r\n`;\r\n\r\nexport const SelectInput = styled.select`\r\n  max-width: 12ch;\r\n  padding: 0.25em 0.5em;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n  font-family: Montserrat;\r\n  text-transform: uppercase;\r\n  color: white;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  line-height: 1.4;\r\n  background-color: transparent;\r\n  margin: 0 auto 0 1em;\r\n`;\r\nexport const OptionInput = styled.option`\r\n  background-color: black;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { getTitles } from \"../utils/fetchServices\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Card, Search } from \"../components\";\r\n\r\nenum VideoType {\r\n  ALL = \"\",\r\n  MOVIES = \"movie\",\r\n  SERIES = \"series\",\r\n}\r\nconst videoTypes = Object.entries(VideoType);\r\n\r\nexport function Home() {\r\n  const classes = useStyles();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [type, setType] = useState<VideoType>(VideoType.ALL);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [totalResults, setTotalResults] = useState(0);\r\n  const [titleList, setTitleList] = useState<SingleTitle[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (!title) return;\r\n    setIsLoading(true);\r\n    getTitles(title, type, page)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setTitleList(res.Search);\r\n        setTotalResults(Number(res.totalResults));\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setTitleList([]);\r\n        setTotalResults(0);\r\n        setIsLoading(false);\r\n      });\r\n  }, [title, page, type]);\r\n\r\n  const handleSearchClick = () => {\r\n    setTitle(inputValue);\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setInputValue(value);\r\n  };\r\n\r\n  const handleSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setType(e.target.value as VideoType);\r\n  };\r\n\r\n  const handleChangePage = (\r\n    event: React.ChangeEvent<unknown>,\r\n    value: number\r\n  ) => {\r\n    setPage(value);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* FORM*/}\r\n\r\n      <Search>\r\n        <Search.Text size=\"large\">{\"Type your video:\"}</Search.Text>\r\n        <Search.Input onChange={handleInputChange} value={inputValue} />\r\n\r\n        <Search.Select value={type} onChange={handleSelectChange}>\r\n          {videoTypes.map((option) => (\r\n            <Search.Option name={option[0]} value={option[1]} />\r\n          ))}\r\n        </Search.Select>\r\n        <Search.Button onClick={handleSearchClick}>Search</Search.Button>\r\n      </Search>\r\n\r\n      {/* CARD CONTAINER  + PAGINATION*/}\r\n\r\n      {!!titleList.length && !isLoading && title && (\r\n        <>\r\n          <small>{`For \"${title}\", found ${totalResults} titles`}</small>\r\n          <h2 style={{ textAlign: \"left\" }}>{`Page ${page} `}</h2>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexWrap: \"wrap\",\r\n              maxWidth: \"1440px\",\r\n              margin: \"5vh auto\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            {titleList.map((video) => (\r\n              <Card key={video.imdbID}>\r\n                <Card.Type>{video.Type}</Card.Type>\r\n                <Card.Image src={video.Poster} />\r\n                <Card.Title>{video.Title}</Card.Title>\r\n                <Card.Year>{video.Year}</Card.Year>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Pagination\r\n              classes={{ ul: classes.ul }}\r\n              count={Math.ceil(totalResults / 10)}\r\n              page={Number(page)}\r\n              onChange={handleChangePage}\r\n              color=\"secondary\"\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* NOT FOUND ERROR*/}\r\n\r\n      {!titleList.length && !isLoading && title && (\r\n        <div style={{ margin: \"15vh 0\" }}>\r\n          <h1>{`For title \"${title}\", didn't found any videos`}</h1>\r\n          <small>{`Try another one :)`}</small>\r\n        </div>\r\n      )}\r\n\r\n      {/* LOADER*/}\r\n\r\n      {!!isLoading && (\r\n        <div style={{ margin: \"15vh 0\" }}>\r\n          <h1>{`Loading...`}</h1>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  ul: {\r\n    \"& .MuiPaginationItem-root\": {\r\n      color: \"#fff\",\r\n      margin: \"20px 0 50px\",\r\n    },\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  Input,\r\n  Form,\r\n  StyledButton,\r\n  SelectInput,\r\n  OptionInput,\r\n} from \"./Search.styles\";\r\n\r\nexport interface SeachElements {\r\n  Input: React.FC<InputProps>;\r\n  Button: React.FC<ButtonProps>;\r\n  Text: React.FC<TextType>;\r\n  Select: React.FC<SelectType>;\r\n  Option: React.FC<OptionType>;\r\n}\r\n\r\ntype InputProps = {\r\n  value: string;\r\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\ntype ButtonProps = {\r\n  onClick: () => void;\r\n};\r\n\r\ntype SelectType = {\r\n  value: string;\r\n  onChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\r\n};\r\n\r\ntype OptionType = {\r\n  value: string;\r\n  name: string;\r\n};\r\n\r\ntype TextType = {\r\n  size?: \"small\" | \"medium\" | \"large\";\r\n};\r\n\r\nexport const Search: React.FC & SeachElements = ({\r\n  children,\r\n  ...restProps\r\n}) => (\r\n  <Form onSubmit={(e) => e.preventDefault()} action=\"\" {...restProps}>\r\n    {children}\r\n  </Form>\r\n);\r\n\r\nSearch.Text = ({ children, ...restProps }) => (\r\n  <h1 {...restProps}>{children}</h1>\r\n);\r\nSearch.Select = ({ children, value, onChange, ...restProps }) => {\r\n  return (\r\n    <SelectInput\r\n      id=\"country\"\r\n      name=\"country\"\r\n      onChange={onChange}\r\n      value={value}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </SelectInput>\r\n  );\r\n};\r\n\r\nSearch.Option = ({ name, value, ...restProps }) => {\r\n  return (\r\n    <OptionInput value={value} {...restProps}>\r\n      {name}\r\n    </OptionInput>\r\n  );\r\n};\r\n\r\nSearch.Button = ({ children, onClick, ...restProps }) => (\r\n  <StyledButton onClick={onClick} {...restProps}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n\r\nSearch.Input = ({ value, onChange, children, ...restProps }) => (\r\n  <Input\r\n    data-testid=\"input\"\r\n    type=\"text\"\r\n    name=\"title\"\r\n    id=\"title\"\r\n    value={value}\r\n    autoComplete='off'\r\n    onChange={onChange}\r\n    {...restProps}\r\n  />\r\n);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { ThemeLayout } from \"./context\";\r\nimport { Home } from \"./pages\";\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeLayout>\r\n      <div className=\"App\">\r\n        <Home />\r\n      </div>\r\n    </ThemeLayout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}